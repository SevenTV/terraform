name: Deploy

on:
  workflow_dispatch:

  pull_request:
    branches:
      - main
      - feature/*
  push:
    branches:
      - main
      - feature/*

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  should_run:
    name: Should run?
    runs-on: ubuntu-latest
    outputs:
      should-run: "${{ (github.event_name == 'workflow_dispatch' || steps.regex-match.outputs.match != 'ci: skip') && (github.event_name != 'pull_request' || !github.event.pull_request.draft || steps.regex-match.outputs.match == 'ci: force') }}"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get last commit message
        run: |
          git log -1 --no-merges --pretty=format:"%B" -n 1 HEAD | tee commit_message.txt
          COMMIT_MSG=$(cat commit_message.txt)

          echo "COMMIT_MSG<<EOF" >> $GITHUB_ENV
          echo "$COMMIT_MSG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ env.COMMIT_MSG }}
          regex: '\bci: (force|skip)\b'

  lint:
    name: Run Lint
    runs-on: ubuntu-latest
    needs: [should_run]
    if: ${{ needs.should_run.outputs.should-run == 'true' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Lint Terraform
        run: terraform fmt -check=true

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [lint]
    environment: prod
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Run Terraform Apply
        run: |
          terraform init
          terraform workspace select prod
          terraform apply
